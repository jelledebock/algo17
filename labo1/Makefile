# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = /usr/local/lib/googletest-master/googletest
# Where to find user code.
SRC_DIR = ./src
TEST_DIR = ./test
BIN_DIR = ./bin
MAKE_DIR = ./make

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -O0 -std=c++11 -pedantic -Wall -Wextra -pthread

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = unittest
#
# # All Google Test headers.  Usually you shouldn't change this
# # definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

all : $(TESTS) $(patsubst ./src/%.cpp, ./bin/%, $(wildcard ./src/*.cpp))

clean :
	    rm -rf $(BIN_DIR)/* \
		rm -rf $(MAKE_DIR)/*

# Builds gtest.a and gtest_main.a.
#
# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
make/gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
        $(GTEST_DIR)/src/gtest-all.cc -o make/gtest-all.o

make/gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
       	$(GTEST_DIR)/src/gtest_main.cc -o make/gtest_main.o

make/gtest.a : make/gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

make/gtest_main.a : make/gtest-all.o make/gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.
make/tests.o : $(TEST_DIR)/tests.cc $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(TEST_DIR)/tests.cc -o make/tests.o

unittest : make/tests.o make/gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $(BIN_DIR)/$@

# Build all src files
$(BIN_DIR)/% : ./src/%.cpp
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -o $@ $^
